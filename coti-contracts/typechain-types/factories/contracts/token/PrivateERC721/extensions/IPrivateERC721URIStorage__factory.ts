/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPrivateERC721URIStorage,
  IPrivateERC721URIStorageInterface,
} from "../../../../../contracts/token/PrivateERC721/extensions/IPrivateERC721URIStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        components: [
          {
            internalType: "ctUint64[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        internalType: "struct ctString",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPrivateERC721URIStorage__factory {
  static readonly abi = _abi;
  static createInterface(): IPrivateERC721URIStorageInterface {
    return new Interface(_abi) as IPrivateERC721URIStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPrivateERC721URIStorage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPrivateERC721URIStorage;
  }
}
