/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { PERCI, PERCIInterface } from "../../../contracts/token/PERCI";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "ownerValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "spenderValue",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "senderValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "accountEncryptionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "ownerCiphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "spenderCiphertext",
            type: "uint256",
          },
        ],
        internalType: "struct IPrivateERC20.Allowance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "value",
        type: "uint64",
      },
    ],
    name: "publicTransfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "reencryptAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offBoardAddress",
        type: "address",
      },
    ],
    name: "setAccountEncryptionAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a2822a921a4902a37b5b2b760a91b81525060405180604001604052806005815260200164504552434960d81b81525081600490816200006591906200083a565b5060056200007482826200083a565b5050600680546001600160a01b031916331790555064174876e80060006200009c82620000e3565b9050620000be73faf7e0962b79675cd046c4c0bf41beeb27fcc5c88262000165565b505060068054600160a01b600160e01b0319166302e90edd60ab1b17905550620009ca565b6040516306cdb05b60e51b8152600160fa1b60048201526001600160401b038216602482015260009060649063d9b60b60906044015b6020604051808303816000875af115801562000139573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015f91906200091c565b92915050565b60006001600160a01b038316620001965760405163ec442f0560e01b81526000600482015260240160405180910390fd5b620001a460008484620001ab565b9392505050565b6000808281620001bc600162000335565b90506001600160a01b03871662000225576000620001e2600354620003bf60201b60201c565b9050620001f08187620003e1565b9050620001fd816200044e565b60035560006200020d88620004a9565b90506200021b8188620003e1565b9450505062000277565b60006200023288620004a9565b905060006200024188620004a9565b905060006200025283838a620004cd565b90975094509050620002658a8262000578565b620002718683620005c2565b94505050505b6001600160a01b038616620002c05760006200029b600354620003bf60201b60201c565b9050620002a98184620005c2565b9050620002b6816200044e565b60035550620002cc565b620002cc868462000578565b6001600160a01b038087169088167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc4462000307858b620005d9565b62000313868b620005d9565b6040805192835260208301919091520160405180910390a39695505050505050565b600080826200034657600062000349565b60015b6040516306cdb05b60e51b81526000600482015260ff9190911660248201819052915060649063d9b60b60906044015b6020604051808303816000875af115801562000399573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a491906200091c565b600081600003620003d6576200015f6000620000e3565b6200015f8262000630565b60006064638c5d0150620003f86004808562000641565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015260248101869052604481018590526064016020604051808303816000875af115801562000399573d6000803e3d6000fd5b6000606463c50c9c0260045b60f81b846040518363ffffffff1660e01b8152600401620001199291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6001600160a01b038116600090815260016020526040812054620001a481620003bf565b6000808080808060646356c72d28620004ea6004808086620006a7565b6040516001600160e01b031960e084901b81168252919091166004820152602481018c9052604481018b9052606481018a90526084016060604051808303816000875af115801562000540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000566919062000936565b919b909a509098509650505050505050565b6000620005858362000733565b90506200059382826200075d565b6001600160a01b0390931660009081526001602081815260409092208551815594909101519301929092555050565b6000606463371d1bf2620003f86004808562000641565b60408051606083901b6001600160601b031916602082015281516014818303018152603482019283905263078de1cd60e31b909252600091606491633c6f0e68916200037991600160fa1b91889160380162000965565b6000606463d2c135e560046200045a565b600081600281111562000658576200065862000906565b60ff16600884600481111562000672576200067262000906565b61ffff16901b61ffff16601086600481111562000693576200069362000906565b62ffffff16901b171760e81b949350505050565b6000816002811115620006be57620006be62000906565b60ff166008846004811115620006d857620006d862000906565b61ffff16901b61ffff166010866004811115620006f957620006f962000906565b62ffffff16901b62ffffff1660188860048111156200071c576200071c62000906565b63ffffffff16901b17171760e01b95945050505050565b6001600160a01b03808216600090815260208190526040812054909116806200015f575090919050565b60408051808201909152600080825260208201526200077c836200044e565b81526200078a8383620005d9565b602082015292915050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620007c057607f821691505b602082108103620007e157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200083557600081815260208120601f850160051c81016020861015620008105750805b601f850160051c820191505b8181101562000831578281556001016200081c565b5050505b505050565b81516001600160401b0381111562000856576200085662000795565b6200086e81620008678454620007ab565b84620007e7565b602080601f831160018114620008a657600084156200088d5750858301515b600019600386901b1c1916600185901b17855562000831565b600085815260208120601f198616915b82811015620008d757888601518255948401946001909101908401620008b6565b5085821015620008f65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156200092f57600080fd5b5051919050565b6000806000606084860312156200094c57600080fd5b8351925060208401519150604084015190509250925092565b60ff60f81b8416815260006020848184015260606040840152835180606085015260005b81811015620009a75785810183015185820160800152820162000989565b506000608082860101526080601f19601f83011685010192505050949350505050565b611aac80620009da6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806370a08231116100d857806396b2db381161008c578063a9059cbb11610066578063a9059cbb14610374578063cbe74a3e14610387578063dd62ed3e1461039a57600080fd5b806396b2db381461033b578063a42c0af91461034e578063a7d9ad6a1461036157600080fd5b80638269bcc3116100bd5780638269bcc3146103005780638da5cb5b1461031357806395d89b411461033357600080fd5b806370a08231146102be578063722713f7146102f857600080fd5b806323b872dd1161012f5780632893c5b0116101145780632893c5b014610288578063313ce5671461029d57806332cb6b0c146102ac57600080fd5b806323b872dd1461026257806326a9b3f11461027557600080fd5b806308a2032a1161016057806308a2032a146101f4578063095ea7b31461021557806318160ddd1461023857600080fd5b8063043d20851461017c57806306fdde03146101df575b600080fd5b6101b561018a36600461157e565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152602081905260409020541690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101e76103cf565b6040516101d691906115fd565b610207610202366004611628565b610461565b6040519081526020016101d6565b610228610223366004611686565b610498565b60405190151581526020016101d6565b60065474010000000000000000000000000000000000000000900467ffffffffffffffff16610207565b6102076102703660046116b0565b6104b2565b6102286102833660046116ec565b6104d4565b61029b610296366004611728565b610588565b005b604051600681526020016101d6565b6102076a084595161401484a00000081565b6102076102cc36600461157e565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120015490565b6102076105fd565b61022861030e36600461157e565b61060d565b6006546101b59073ffffffffffffffffffffffffffffffffffffffff1681565b6101e7610691565b6102076103493660046116ec565b6106a0565b61022861035c366004611761565b610723565b61020761036f366004611761565b61074b565b610207610382366004611686565b610768565b610207610395366004611728565b61077e565b6103ad6103a83660046117af565b610797565b60408051825181526020808401519082015291810151908201526060016101d6565b6060600480546103de906117e2565b80601f016020809104026020016040519081016040528092919081815260200182805461040a906117e2565b80156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050905090565b60003381610476610471856118d6565b610816565b90506104838683836108c2565b61048e8686836109af565b9695505050505050565b6000336104a6818585610a61565b60019150505b92915050565b6000336104c08582856108c2565b6104cb8585856109af565b95945050505050565b6000806104e033610c73565b905082156105385733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684529091529020805461052d9061052790610ca9565b83610cc6565b6001909101556104a6565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902080546105779061052790610ca9565b600290910155600191505092915050565b600061059c8361059784610db2565b610e22565b90506105a781610e80565b156105f85781600660148282829054906101000a900467ffffffffffffffff166105d19190611999565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b505050565b600061060833610f11565b905090565b60008061061933610f11565b33600090815260208190526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861617905590506106728184610cc6565b3360009081526001602081905260409091208101919091559392505050565b6060600580546103de906117e2565b600081156106e95733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091529020546106e290610ca9565b90506104ac565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091529020546106e290610ca9565b60003381610733610471856118d6565b9050610740828683610a61565b506001949350505050565b6000338161075b610471856118d6565b90506104cb8286836109af565b6000336107768185856109af565b949350505050565b60008061078a83610db2565b90506107763385836109af565b6107bb60405180606001604052806000815260200160008152602001600081525090565b5073ffffffffffffffffffffffffffffffffffffffff91821660009081526002602081815260408084209490951683529283529083902083516060810185528154815260018201549381019390935201549181019190915290565b805160208201516040517fe4f36e1000000000000000000000000000000000000000000000000000000000815260009260649263e4f36e109261087f927f0400000000000000000000000000000000000000000000000000000000000000929091600401611a17565b6020604051808303816000875af115801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac9190611a58565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120546108f190610ca9565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526002602090815260408083209388168352929052908120549192509061093390610ca9565b905060006109518261094c67ffffffffffffffff610db2565b610f40565b9050600061095f8486610fc0565b9050600061096d8487610fc0565b90506000610997610987856109828686610fd5565b610fd5565b610991878a610fe9565b87610ffe565b90506109a4898983610a61565b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8416610a06576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316610a56576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016109fd565b6107768484846110c3565b73ffffffffffffffffffffffffffffffffffffffff8316610ab1576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016109fd565b73ffffffffffffffffffffffffffffffffffffffff8216610b01576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016109fd565b6000610b0c82611255565b90506000610b1985610c73565b90506000610b278483610cc6565b9050610b3285610c73565b91506000610b408584610cc6565b9050604051806060016040528085815260200183815260200182815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a78484604051610c62929190918252602082015260400190565b60405180910390a350505050505050565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260208190526040812054909116806104ac575090919050565b600081600003610cbd576104ac6000610db2565b6104ac826112af565b60408051606083901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660208201528151601481830301815260348201928390527f3c6f0e6800000000000000000000000000000000000000000000000000000000909252600091606491633c6f0e6891610d68917f0400000000000000000000000000000000000000000000000000000000000000918891603801611a17565b6020604051808303816000875af1158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab9190611a58565b9392505050565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b609060440161087f565b600073ffffffffffffffffffffffffffffffffffffffff8316610e74576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016109fd565b610dab600084846110c3565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015610ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f089190611a58565b15159392505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812054610dab81610ca9565b60006064637c12a1eb610f55600480856112bf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905260448101859052606401610d68565b6000606463dd148693610f55600480856112bf565b6000606463fb7da35f610f558380806112bf565b6000606463371d1bf2610f55600480856112bf565b600060646320cc408d611013600480856112bf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810187905260448101869052606481018590526084016020604051808303816000875af115801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190611a58565b60008082816110d2600161131c565b905073ffffffffffffffffffffffffffffffffffffffff87166111365760006110fc600354610ca9565b9050611108818761137b565b905061111381611255565b600355600061112188610f11565b905061112d818861137b565b9450505061117e565b600061114188610f11565b9050600061114e88610f11565b9050600061115d83838a611390565b9097509450905061116e8a8261144e565b6111788683610fe9565b94505050505b73ffffffffffffffffffffffffffffffffffffffff86166111c65760006111a6600354610ca9565b90506111b28184610fe9565b90506111bd81611255565b600355506111d0565b6111d0868461144e565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44611229858b610cc6565b611233868b610cc6565b6040805192835260208301919091520160405180910390a39695505050505050565b6000606463c50c9c0260045b60f81b846040518363ffffffff1660e01b815260040161087f9291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6000606463d2c135e56004611261565b60008160028111156112d3576112d36119e8565b60ff1660088460048111156112ea576112ea6119e8565b61ffff16901b61ffff166010866004811115611308576113086119e8565b62ffffff16901b171760e81b949350505050565b6000808261132b57600061132e565b60015b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081526000600482015260ff9190911660248201819052915060649063d9b60b6090604401610d68565b60006064638c5d0150610f55600480856112bf565b6000808080808060646356c72d286113ab60048080866114a1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602481018c9052604481018b9052606481018a90526084016060604051808303816000875af1158015611418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143c9190611a71565b919b909a509098509650505050505050565b600061145983610c73565b90506114658282611521565b73ffffffffffffffffffffffffffffffffffffffff90931660009081526001602081815260409092208551815594909101519301929092555050565b60008160028111156114b5576114b56119e8565b60ff1660088460048111156114cc576114cc6119e8565b61ffff16901b61ffff1660108660048111156114ea576114ea6119e8565b62ffffff16901b62ffffff16601888600481111561150a5761150a6119e8565b63ffffffff16901b17171760e01b95945050505050565b604080518082019091526000808252602082015261153e83611255565b815261154a8383610cc6565b602082015292915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461157957600080fd5b919050565b60006020828403121561159057600080fd5b610dab82611555565b6000815180845260005b818110156115bf576020818501810151868301820152016115a3565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610dab6020830184611599565b60006040828403121561162257600080fd5b50919050565b60008060006060848603121561163d57600080fd5b61164684611555565b925061165460208501611555565b9150604084013567ffffffffffffffff81111561167057600080fd5b61167c86828701611610565b9150509250925092565b6000806040838503121561169957600080fd5b6116a283611555565b946020939093013593505050565b6000806000606084860312156116c557600080fd5b6116ce84611555565b92506116dc60208501611555565b9150604084013590509250925092565b600080604083850312156116ff57600080fd5b61170883611555565b91506020830135801515811461171d57600080fd5b809150509250929050565b6000806040838503121561173b57600080fd5b61174483611555565b9150602083013567ffffffffffffffff8116811461171d57600080fd5b6000806040838503121561177457600080fd5b61177d83611555565b9150602083013567ffffffffffffffff81111561179957600080fd5b6117a585828601611610565b9150509250929050565b600080604083850312156117c257600080fd5b6117cb83611555565b91506117d960208401611555565b90509250929050565b600181811c908216806117f657607f821691505b602082108103611622577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156118815761188161182f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118ce576118ce61182f565b604052919050565b6000604082360312156118e857600080fd5b6118f061185e565b8235815260208084013567ffffffffffffffff8082111561191057600080fd5b9085019036601f83011261192357600080fd5b8135818111156119355761193561182f565b611965847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611887565b9150808252368482850101111561197b57600080fd5b80848401858401376000908201840152918301919091525092915050565b67ffffffffffffffff8181168382160190808211156119e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7fff00000000000000000000000000000000000000000000000000000000000000841681528260208201526060604082015260006104cb6060830184611599565b600060208284031215611a6a57600080fd5b5051919050565b600080600060608486031215611a8657600080fd5b835192506020840151915060408401519050925092509256fea164736f6c6343000814000a";

type PERCIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PERCIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PERCI__factory extends ContractFactory {
  constructor(...args: PERCIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PERCI & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PERCI__factory {
    return super.connect(runner) as PERCI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PERCIInterface {
    return new Interface(_abi) as PERCIInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PERCI {
    return new Contract(address, _abi, runner) as unknown as PERCI;
  }
}
