/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  CheckedArithmeticWithOverflowBitTestsContract,
  CheckedArithmeticWithOverflowBitTestsContractInterface,
} from "../../../../../../contracts/mocks/utils/mpc/CheckedArithmeticWIthOverflowBitTestsContract.sol/CheckedArithmeticWithOverflowBitTestsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "checkedAddWithOverflowBitTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "checkedMulWithOverflowBitTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "checkedSubWithOverflowBitTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint16",
            name: "res16_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res8_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res16_8",
            type: "uint256",
          },
        ],
        internalType:
          "struct CheckedArithmeticWithOverflowBitTestsContract.Check16",
        name: "check16",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint32",
            name: "res32_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res8_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_8",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res16_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_16",
            type: "uint256",
          },
        ],
        internalType:
          "struct CheckedArithmeticWithOverflowBitTestsContract.Check32",
        name: "check32",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint64",
            name: "res64_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res8_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_8",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res16_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_16",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res32_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_32",
            type: "uint256",
          },
        ],
        internalType:
          "struct CheckedArithmeticWithOverflowBitTestsContract.Check64",
        name: "check64",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMulResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSubResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType:
          "struct CheckedArithmeticWithOverflowBitTestsContract.AllGTCastingValues",
        name: "castingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "setPublicValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612d20806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063acb3816911610076578063d9c538e41161005b578063d9c538e41461018f578063ebb571fd146101a2578063f24b6259146101b757600080fd5b8063acb3816914610156578063d3e4744d1461017e57600080fd5b80637df4fdd1116100a75780637df4fdd11461010757806380f937bc1461011a578063971bbe6f1461014657600080fd5b806324ad7b30146100c35780632e544aa0146100e1575b600080fd5b60005460ff165b60405160ff90911681526020015b60405180910390f35b6100f46100ef3660046129f6565b6101ca565b60405161ffff90911681526020016100d8565b6100ca610115366004612a8f565b6102b5565b61012d610128366004612ac2565b6109f2565b60405167ffffffffffffffff90911681526020016100d8565b600054610100900460ff166100ca565b610169610164366004612b6d565b610b95565b60405163ffffffff90911681526020016100d8565b60005462010000900460ff166100ca565b6100ca61019d366004612a8f565b610cc2565b6101b56101b0366004612c04565b6113f1565b005b6100ca6101c5366004612a8f565b611478565b6000806101da8360000151611ba6565b90506101e98360200151611ba6565b61ffff168161ffff1614801561021257506102078360400151611ba6565b61ffff168161ffff16145b6102af5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b92915050565b60006102ff60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61032360405180606001604052806000815260200160008152602001600081525090565b6103556040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6103956040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6103a08488886113f1565b6000806103b586600001518760200151611c43565b9150915060006103c482611d11565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff83161790556040880151606089015191925061040791611d21565b8752508651606088015161041b9190611d39565b905086602001818152505061043887604001518860200151611d52565b6040880152506000610449876101ca565b90508160ff168161ffff16146104a15760405162461bcd60e51b815260206004820152601760248201527f616464546573743a2063617374203136206661696c656400000000000000000060448201526064016102a6565b6104b388608001518960a00151611d6b565b875250875160a08901516104c79190611d83565b90508660200181815250506104e488608001518960200151611d9c565b60408089019190915289015160a08a01516104ff9250611db5565b905086606001818152505061051c88608001518960600151611dce565b608088015250600061052d87610b95565b90508063ffffffff168360ff16146105875760405162461bcd60e51b815260206004820152601760248201527f616464546573743a2063617374203332206661696c656400000000000000000060448201526064016102a6565b6105998960c001518a60e00151611de7565b875250885160e08a01516105ad9190611dff565b90508660200181815250506105ca8960c001518a60200151611e18565b6040808901919091528a015160e08b01516105e59250611e31565b90508660600181815250506106028960c001518a60600151611e4a565b6080808901919091528a015160e08b015161061d9250611e63565b90508660a001818152505061063a8960c001518a60a00151611e7c565b60c088015250600061064b876109f2565b90508067ffffffffffffffff168460ff16146106a95760405162461bcd60e51b815260206004820152601760248201527f616464546573743a2063617374203634206661696c656400000000000000000060448201526064016102a6565b60006106b98e8c60200151611e95565b91505060006106cc8c600001518f611f1a565b9150506106d882611d11565b60ff168660ff161480156106f957506106f081611d11565b60ff168660ff16145b61076b5760405162461bcd60e51b815260206004820152602760248201527f616464546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102a6565b505060006107808e60ff168c60600151611fa0565b91505060006107968c604001518f60ff16612027565b9150506107a282611ba6565b61ffff168660ff161480156107c557506107bb81611ba6565b61ffff168660ff16145b6108375760405162461bcd60e51b815260206004820152602860248201527f616464546573743a207465737420313620626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b5050600061084c8e60ff168c60a001516120ad565b91505060006108628c608001518f60ff16612136565b91505061086e826121bf565b63ffffffff168660ff161480156108955750610889816121bf565b63ffffffff168660ff16145b6109075760405162461bcd60e51b815260206004820152602860248201527f616464546573743a207465737420333220626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b5050600061091c8e60ff168c60e001516121cf565b91505060006109328c60c001518f60ff1661225c565b91505061093e826122e9565b67ffffffffffffffff168660ff1614801561096d575061095d816122e9565b67ffffffffffffffff168660ff16145b6109df5760405162461bcd60e51b815260206004820152602860248201527f616464546573743a207465737420363420626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b50939d9c50505050505050505050505050565b600080610a0283600001516122e9565b9050610a1183602001516122e9565b67ffffffffffffffff168167ffffffffffffffff16148015610a525750610a3b83604001516122e9565b67ffffffffffffffff168167ffffffffffffffff16145b8015610a7d5750610a6683608001516122e9565b67ffffffffffffffff168167ffffffffffffffff16145b8015610aa85750610a9183606001516122e9565b67ffffffffffffffff168167ffffffffffffffff16145b8015610ad35750610abc8360c001516122e9565b67ffffffffffffffff168167ffffffffffffffff16145b80156102125750610ae78360a001516122e9565b67ffffffffffffffff168167ffffffffffffffff16146102af5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a4016102a6565b600080610ba583600001516121bf565b9050610bb483602001516121bf565b63ffffffff168163ffffffff16148015610be55750610bd683604001516121bf565b63ffffffff168163ffffffff16145b8015610c085750610bf983608001516121bf565b63ffffffff168163ffffffff16145b80156102125750610c1c83606001516121bf565b63ffffffff168163ffffffff16146102af5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a4016102a6565b6000610d0c60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610d3060405180606001604052806000815260200160008152602001600081525090565b610d626040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b610da26040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610dad8488886113f1565b600080610dc2866000015187602001516122f9565b915091506000610dd182611d11565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff166201000060ff84160217905560408801516060890151919250610e1991612311565b87525086516060880151610e2d9190612329565b9050866020018181525050610e4a87604001518860200151612342565b6040880152506000610e5b876101ca565b90508061ffff168260ff1614610eb35760405162461bcd60e51b815260206004820152601760248201527f6d756c546573743a2063617374203136206661696c656400000000000000000060448201526064016102a6565b610ec588608001518960a0015161235b565b875250875160a0890151610ed99190612373565b9050866020018181525050610ef68860800151896020015161238c565b60408089019190915289015160a08a0151610f1192506123a5565b9050866060018181525050610f2e886080015189606001516123be565b6080880152506000610f3f87610b95565b90508063ffffffff168360ff1614610f995760405162461bcd60e51b815260206004820152601760248201527f6d756c546573743a2063617374203332206661696c656400000000000000000060448201526064016102a6565b610fab8960c001518a60e001516123d7565b875250885160e08a0151610fbf91906123ef565b9050866020018181525050610fdc8960c001518a60200151612408565b6040808901919091528a015160e08b0151610ff79250612421565b90508660600181815250506110148960c001518a6060015161243a565b6080808901919091528a015160e08b015161102f9250612453565b90508660a001818152505061104c8960c001518a60a0015161246c565b60c088015250600061105d876109f2565b90508067ffffffffffffffff168460ff16146110bb5760405162461bcd60e51b815260206004820152601760248201527f6d756c546573743a2063617374203634206661696c656400000000000000000060448201526064016102a6565b60006110cb8e8c60200151612485565b91505060006110de8c600001518f61249d565b9150506110ea82611d11565b60ff168660ff1614801561110b575061110281611d11565b60ff168660ff16145b61117d5760405162461bcd60e51b815260206004820152602760248201527f6d756c546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102a6565b505060006111928e60ff168c606001516124b6565b91505060006111a88c604001518f60ff166124cf565b9150506111b482611ba6565b61ffff168660ff161480156111d757506111cd81611ba6565b61ffff168660ff16145b6112495760405162461bcd60e51b815260206004820152602860248201527f6d756c546573743a207465737420313620626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b5050600061125e8e60ff168c60a001516124e7565b91505060006112748c608001518f60ff16612500565b915050611280826121bf565b63ffffffff168660ff161480156112a7575061129b816121bf565b63ffffffff168660ff16145b6113195760405162461bcd60e51b815260206004820152602860248201527f6d756c546573743a207465737420333220626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b5050600061132e8e60ff168c60e00151612519565b91505060006113448c60c001518f60ff16612532565b915050611350826122e9565b67ffffffffffffffff168660ff1614801561137f575061136f816122e9565b67ffffffffffffffff168660ff16145b6109df5760405162461bcd60e51b815260206004820152602860248201527f6d756c546573743a207465737420363420626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b6113fa8261254b565b83526114058161254b565b602084015261141660ff83166125b4565b604084015261142760ff82166125b4565b606084015261143860ff831661261e565b608084015261144960ff821661261e565b60a084015261145a60ff831661268a565b60c084015261146b60ff821661268a565b60e0909301929092525050565b60006114c260405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6114e660405180606001604052806000815260200160008152602001600081525090565b6115186040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6115586040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6115638488886113f1565b600080611578866000015187602001516126fa565b91509150600061158782611d11565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010060ff841602179055604088015160608901519192506115ce91612712565b875250865160608801516115e2919061272a565b90508660200181815250506115ff87604001518860200151612743565b6040880152506000611610876101ca565b90508160ff168161ffff16146116685760405162461bcd60e51b815260206004820152601760248201527f737562546573743a2063617374203136206661696c656400000000000000000060448201526064016102a6565b61167a88608001518960a0015161275c565b875250875160a089015161168e9190612774565b90508660200181815250506116ab8860800151896020015161278d565b60408089019190915289015160a08a01516116c692506127a6565b90508660600181815250506116e3886080015189606001516127bf565b60808801525060006116f487610b95565b90508063ffffffff168360ff161461174e5760405162461bcd60e51b815260206004820152601760248201527f737562546573743a2063617374203332206661696c656400000000000000000060448201526064016102a6565b6117608960c001518a60e001516127d8565b875250885160e08a015161177491906127f0565b90508660200181815250506117918960c001518a60200151612809565b6040808901919091528a015160e08b01516117ac9250612822565b90508660600181815250506117c98960c001518a6060015161283b565b6080808901919091528a015160e08b01516117e49250612854565b90508660a00181815250506118018960c001518a60a0015161286d565b60c0880152506000611812876109f2565b90508067ffffffffffffffff168460ff16146118705760405162461bcd60e51b815260206004820152601760248201527f737562546573743a2063617374203634206661696c656400000000000000000060448201526064016102a6565b60006118808e8c60200151612886565b91505060006118938c600001518f61289e565b91505061189f82611d11565b60ff168660ff161480156118c057506118b781611d11565b60ff168660ff16145b6119325760405162461bcd60e51b815260206004820152602760248201527f737562546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102a6565b505060006119478e60ff168c606001516128b7565b915050600061195d8c604001518f60ff166128d0565b91505061196982611ba6565b61ffff168660ff1614801561198c575061198281611ba6565b61ffff168660ff16145b6119fe5760405162461bcd60e51b815260206004820152602860248201527f737562546573743a207465737420313620626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b50506000611a138e60ff168c60a001516128e8565b9150506000611a298c608001518f60ff16612901565b915050611a35826121bf565b63ffffffff168660ff16148015611a5c5750611a50816121bf565b63ffffffff168660ff16145b611ace5760405162461bcd60e51b815260206004820152602860248201527f737562546573743a207465737420333220626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b50506000611ae38e60ff168c60e0015161291a565b9150506000611af98c60c001518f60ff16612933565b915050611b05826122e9565b67ffffffffffffffff168660ff16148015611b345750611b24816122e9565b67ffffffffffffffff168660ff16145b6109df5760405162461bcd60e51b815260206004820152602860248201527f737562546573743a207465737420363420626974732077697468207363616c6160448201527f72206661696c656400000000000000000000000000000000000000000000000060648201526084016102a6565b60006064630cfed56160025b60f81b846040518363ffffffff1660e01b8152600401611c009291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6020604051808303816000875af1158015611c1f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190612cd6565b6000808080606463f581fa20611c5b60018085612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260248101899052604481018890526064015b60408051808303816000875af1158015611ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d049190612cef565b9097909650945050505050565b60006064630cfed5616001611bb2565b6000808080606463f581fa20611c5b60028085612948565b6000808080606463f581fa20611c5b6001600285612948565b6000808080606463f581fa20611c5b6002600185612948565b6000808080606463f581fa20611c5b60038085612948565b6000808080606463f581fa20611c5b6001600385612948565b6000808080606463f581fa20611c5b6003600185612948565b6000808080606463f581fa20611c5b6002600385612948565b6000808080606463f581fa20611c5b6003600285612948565b6000808080606463f581fa20611c5b60048085612948565b6000808080606463f581fa20611c5b6001600485612948565b6000808080606463f581fa20611c5b6004600185612948565b6000808080606463f581fa20611c5b6002600485612948565b6000808080606463f581fa20611c5b6004600285612948565b6000808080606463f581fa20611c5b6003600485612948565b6000808080606463f581fa20611c5b6004600385612948565b6000808080606463f581fa20611ead60018080612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260ff8916602482015260448101889052606401611cc2565b6000808080606463f581fa20611f336001806002612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810189905260ff88166044820152606401611cc2565b6000808080606463f581fa20611fb96002806001612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015261ffff8916602482015260448101889052606401611cc2565b6000808080606463f581fa2061203f60028080612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810189905261ffff88166044820152606401611cc2565b6000808080606463f581fa206120c66003806001612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015263ffffffff8916602482015260448101889052606401611cc2565b6000808080606463f581fa2061214f6003806002612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810189905263ffffffff88166044820152606401611cc2565b60006064630cfed5616003611bb2565b6000808080606463f581fa206121e86004806001612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015267ffffffffffffffff8916602482015260448101889052606401611cc2565b6000808080606463f581fa206122756004806002612948565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810189905267ffffffffffffffff88166044820152606401611cc2565b60006064630cfed5616004611bb2565b60008080806064630915497f611c5b60018085612948565b60008080806064630915497f611c5b60028085612948565b60008080806064630915497f611c5b6001600285612948565b60008080806064630915497f611c5b6002600185612948565b60008080806064630915497f611c5b60038085612948565b60008080806064630915497f611c5b6001600385612948565b60008080806064630915497f611c5b6003600185612948565b60008080806064630915497f611c5b6002600385612948565b60008080806064630915497f611c5b6003600285612948565b60008080806064630915497f611c5b60048085612948565b60008080806064630915497f611c5b6001600485612948565b60008080806064630915497f611c5b6004600185612948565b60008080806064630915497f611c5b6002600485612948565b60008080806064630915497f611c5b6004600285612948565b60008080806064630915497f611c5b6003600485612948565b60008080806064630915497f611c5b6004600385612948565b60008080806064630915497f611ead60018080612948565b60008080806064630915497f611f336001806002612948565b60008080806064630915497f611fb96002806001612948565b60008080806064630915497f61203f60028080612948565b60008080806064630915497f6120c66003806001612948565b60008080806064630915497f61214f6003806002612948565b60008080806064630915497f6121e86004806001612948565b60008080806064630915497f6122756004806002612948565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b6090604401611c00565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0200000000000000000000000000000000000000000000000000000000000000600482015261ffff8216602482015260009060649063d9b60b6090604401611c00565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0300000000000000000000000000000000000000000000000000000000000000600482015263ffffffff8216602482015260009060649063d9b60b6090604401611c00565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b6090604401611c00565b6000808080606463ce8c713d611c5b60018085612948565b6000808080606463ce8c713d611c5b60028085612948565b6000808080606463ce8c713d611c5b6001600285612948565b6000808080606463ce8c713d611c5b6002600185612948565b6000808080606463ce8c713d611c5b60038085612948565b6000808080606463ce8c713d611c5b6001600385612948565b6000808080606463ce8c713d611c5b6003600185612948565b6000808080606463ce8c713d611c5b6002600385612948565b6000808080606463ce8c713d611c5b6003600285612948565b6000808080606463ce8c713d611c5b60048085612948565b6000808080606463ce8c713d611c5b6001600485612948565b6000808080606463ce8c713d611c5b6004600185612948565b6000808080606463ce8c713d611c5b6002600485612948565b6000808080606463ce8c713d611c5b6004600285612948565b6000808080606463ce8c713d611c5b6003600485612948565b6000808080606463ce8c713d611c5b6004600385612948565b6000808080606463ce8c713d611ead60018080612948565b6000808080606463ce8c713d611f336001806002612948565b6000808080606463ce8c713d611fb96002806001612948565b6000808080606463ce8c713d61203f60028080612948565b6000808080606463ce8c713d6120c66003806001612948565b6000808080606463ce8c713d61214f6003806002612948565b6000808080606463ce8c713d6121e86004806001612948565b6000808080606463ce8c713d61227560048060025b600081600281111561295c5761295c612ca7565b60ff16600884600481111561297357612973612ca7565b61ffff16901b61ffff16601086600481111561299157612991612ca7565b62ffffff16901b171760e81b949350505050565b604051610100810167ffffffffffffffff811182821017156129f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b600060608284031215612a0857600080fd5b6040516060810181811067ffffffffffffffff82111715612a52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80604052508235815260208301356020820152604083013560408201528091505092915050565b803560ff81168114612a8a57600080fd5b919050565b60008060408385031215612aa257600080fd5b612aab83612a79565b9150612ab960208401612a79565b90509250929050565b600060e08284031215612ad457600080fd5b60405160e0810181811067ffffffffffffffff82111715612b1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b600060a08284031215612b7f57600080fd5b60405160a0810181811067ffffffffffffffff82111715612bc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b6000806000838503610140811215612c1b57600080fd5b61010080821215612c2b57600080fd5b612c336129a5565b9150853582526020860135602083015260408601356040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e0830152819450612c8d818701612a79565b93505050612c9e6101208501612a79565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215612ce857600080fd5b5051919050565b60008060408385031215612d0257600080fd5b50508051602090910151909290915056fea164736f6c6343000813000a";

type CheckedArithmeticWithOverflowBitTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckedArithmeticWithOverflowBitTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckedArithmeticWithOverflowBitTestsContract__factory extends ContractFactory {
  constructor(
    ...args: CheckedArithmeticWithOverflowBitTestsContractConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CheckedArithmeticWithOverflowBitTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CheckedArithmeticWithOverflowBitTestsContract__factory {
    return super.connect(
      runner
    ) as CheckedArithmeticWithOverflowBitTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckedArithmeticWithOverflowBitTestsContractInterface {
    return new Interface(
      _abi
    ) as CheckedArithmeticWithOverflowBitTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CheckedArithmeticWithOverflowBitTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CheckedArithmeticWithOverflowBitTestsContract;
  }
}
