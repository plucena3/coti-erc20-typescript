/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Miscellaneous128BitTestsContract,
  Miscellaneous128BitTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/Miscellaneous128BitTestsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "a",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "b",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ctNumbers",
    outputs: [
      {
        internalType: "ctUint64",
        name: "high",
        type: "uint256",
      },
      {
        internalType: "ctUint64",
        name: "low",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numbers",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a_",
        type: "uint128[]",
      },
    ],
    name: "offBoardToUserTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "numBits",
        type: "uint8[]",
      },
    ],
    name: "randBoundedBitsTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "randTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a_",
        type: "uint128[]",
      },
    ],
    name: "setPublicTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "success",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a_",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b_",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amount_",
        type: "uint128[]",
      },
    ],
    name: "transferTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a_",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b_",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amount_",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "allowance_",
        type: "uint128[]",
      },
    ],
    name: "transferWithAllowanceTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "ctUint64",
                name: "high",
                type: "uint256",
              },
              {
                internalType: "ctUint64",
                name: "low",
                type: "uint256",
              },
            ],
            internalType: "struct ctUint128",
            name: "ciphertext",
            type: "tuple",
          },
          {
            internalType: "bytes[2]",
            name: "signature",
            type: "bytes[2]",
          },
        ],
        internalType: "struct itUint128[]",
        name: "a_",
        type: "tuple[]",
      },
    ],
    name: "validateCiphertextTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061215f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063cd580ff31161008c578063d39fa23311610066578063d39fa233146101dc578063d736d514146101ef578063e08fa2a314610202578063f0fdf8341461021557600080fd5b8063cd580ff31461018e578063d0ed1a3e146101a1578063d1eaa4cf146101b457600080fd5b8063888ea243116100bd578063888ea24314610145578063a2240c3414610168578063a681f5851461017b57600080fd5b80632e43d7dc146100e4578063419e6fbe1461011d57806347136a3c14610132575b600080fd5b6100f76100f2366004611b3c565b610228565b6040516fffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61013061012b366004611ba1565b61026e565b005b610130610140366004611be3565b61032d565b610158610153366004611b3c565b610610565b6040519015158152602001610114565b610130610176366004611b3c565b610644565b610130610189366004611ba1565b6106d6565b6100f761019c366004611b3c565b61077c565b6101306101af366004611ca7565b61078c565b6101c76101c2366004611b3c565b6109b5565b60408051928352602083019190915201610114565b6100f76101ea366004611b3c565b6109e3565b6101306101fd366004611ba1565b6109f3565b610130610210366004611ba1565b610ab9565b6100f7610223366004611b3c565b610b33565b6005818154811061023857600080fd5b9060005260206000209060029182820401919006601002915054906101000a90046fffffffffffffffffffffffffffffffff1681565b61027781610b43565b60005b81811015610328576102b96102b484848481811061029a5761029a611d41565b90506020020160208101906102af9190611d70565b610bc4565b610c43565b600082815481106102cc576102cc611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508061032190611dc2565b905061027a565b505050565b868514801561033b57508683145b801561034657508681145b6103b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d61746368000000000000000000000060448201526064015b60405180910390fd5b6103ba87610c9c565b6103c387610d22565b6103cc87610da7565b6103d587610e1a565b6000805b888110156106045760006104128b8b848181106103f8576103f8611d41565b905060200201602081019061040d9190611dfa565b610e9f565b9050600061042b8a8a858181106103f8576103f8611d41565b905060006104448989868181106103f8576103f8611d41565b9050600061045d8888878181106103f8576103f8611d41565b905061046b84848484610ef9565b9098509195509350905061047e84610c43565b6002868154811061049157610491611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506104e583610c43565b600386815481106104f8576104f8611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061054c86610fb0565b6004868154811061055f5761055f611d41565b90600052602060002090602091828204019190066101000a81548160ff02191690831515021790555061059181610c43565b600586815481106105a4576105a4611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050806105fd90611dc2565b90506103d9565b50505050505050505050565b6004818154811061062057600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b61064d81610b43565b60005b818110156106d2576106636102b4611041565b6000828154811061067657610676611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550806106cb90611dc2565b9050610650565b5050565b6106df81610b43565b60005b818110156103285760006107018484848181106103f8576103f8611d41565b905061070c81610c43565b6000838154811061071f5761071f611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508061077590611dc2565b90506106e2565b6003818154811061023857600080fd5b848314801561079a57508481145b610800576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d61746368000000000000000000000060448201526064016103a8565b61080985610c9c565b61081285610d22565b61081b85610da7565b6000805b868110156109ab57600061083e8989848181106103f8576103f8611d41565b905060006108578888858181106103f8576103f8611d41565b905060006108708787868181106103f8576103f8611d41565b905061087d838383611085565b9650909350915061088d83610c43565b600285815481106108a0576108a0611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506108f482610c43565b6003858154811061090757610907611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061095b85610fb0565b6004858154811061096e5761096e611d41565b90600052602060002090602091828204019190066101000a81548160ff021916908315150217905550505050806109a490611dc2565b905061081f565b5050505050505050565b600181815481106109c557600080fd5b60009182526020909120600290910201805460019091015490915082565b6000818154811061023857600080fd5b6109fc81610b43565b60005b81811015610328576000610a3e848484818110610a1e57610a1e611d41565b9050602002810190610a309190611e2c565b610a3990611f11565b6110f0565b9050610a4981610c43565b60008381548110610a5c57610a5c611d41565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505080610ab290611dc2565b90506109ff565b610ac281611170565b60005b81811015610328576000610ae48484848181106103f8576103f8611d41565b9050610af0813361120d565b60018381548110610b0357610b03611d41565b6000918252602091829020835160029092020190815591015160019091015550610b2c81611dc2565b9050610ac5565b6002818154811061023857600080fd5b610b4e600080611a9a565b60005b818110156106d25760008054600180820183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360028204018054929091166010026101000a6fffffffffffffffffffffffffffffffff0219909116905580610bbc81611dc2565b915050610b51565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600060408460ff1611610bff5783610c02565b60405b9050610c0d81611260565b6020830152604060ff851611610c24576000610c2f565b610c2f604085612054565b9050610c3a81611260565b82525092915050565b600080610c538360000151611308565b90506000610c648460200151611308565b90508067ffffffffffffffff1660408367ffffffffffffffff166fffffffffffffffffffffffffffffffff16901b1792505050919050565b610ca860026000611a9a565b60005b818110156106d257600280546001808201835560008390527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace928204929092018054929091166010026101000a6fffffffffffffffffffffffffffffffff0219909116905580610d1a81611dc2565b915050610cab565b610d2e60036000611a9a565b60005b818110156106d25760038054600180820183556000929092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b60028204018054929091166010026101000a6fffffffffffffffffffffffffffffffff0219909116905580610d9f81611dc2565b915050610d31565b610db360046000611ac2565b60005b818110156106d257600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60208204018054601f9092166101000a60ff0219909116905580610e1281611dc2565b915050610db6565b610e2660056000611a9a565b60005b818110156106d25760058054600180820183556000929092527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db060028204018054929091166010026101000a6fffffffffffffffffffffffffffffffff0219909116905580610e9781611dc2565b915050610e29565b604080518082019091526000808252602082015260408051808201909152600080825260208201528267ffffffffffffffff604082901c16610ee08161136f565b8352610eeb8261136f565b602084015250909392505050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000610f40604051806040016040528060008152602001600081525090565b6000610f5e610f4f8a896113df565b610f59898961142b565b61146a565b90506000610f76828b610f718d8c61152f565b6115b9565b90506000610f89838b610f718d8d611612565b90506000610f9c848a610f718c8e61152f565b929c919b5092995090975095505050505050565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015611014573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611038919061209c565b15159392505050565b60408051808201909152600080825260208201526040805180820190915260008082526020820152611071611687565b815261107b611687565b6020820152919050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000806110ba87866113df565b905060006110cd8289610f718b8a61152f565b905060006110e08389610f718b8b611612565b9199919850919650945050505050565b6040805180820182526000808252602080830182905283518085018552828152808201839052845180860186528381526060818401818152885151835288850180515190915287518089019098529487528684019081528751840151875293519092015190925291929091906111658261172a565b8352610eeb8161172a565b61117c60016000611ae7565b60005b818110156106d25760408051808201909152600080825260208201818152600180548082018255925291517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660029092029182015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7909101558061120581611dc2565b91505061117f565b6040805180820190915260008082526020820152604080518082019091526000808252602082015283516112419084611793565b815260208401516112529084611793565b602082015290505b92915050565b6040517f072d17fc0000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063072d17fc906044015b6020604051808303816000875af11580156112e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125a919061209c565b6040517f0cfed5610000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015260248101829052600090606490630cfed561906044016112c5565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b60906044016112c5565b6000806113f484600001518460000151611835565b90506114238161140c8660000151866000015161184a565b61141e8760200151876020015161185f565b611874565b949350505050565b60008061144084600001518460000151611835565b90506114238161145886600001518660000151611938565b61141e8760200151876020015161194d565b6000606463fe9c73d161147e83808061195e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260248101869052604481018590526064015b6020604051808303816000875af1158015611504573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611528919061209c565b9392505050565b60408051808201909152600080825260208201526040805180820190915260008082526020820152611569846020015184602001516119bb565b816020018181525050600061158685602001518560200151611938565b85518551919250611596916119bb565b8083526115af9082906115aa8160016119d0565b611a5a565b8252509392505050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526115f48585602001518560200151611a5a565b602082015283518351611608918791611a5a565b8152949350505050565b6040805180820190915260008082526020820152604080518082019091526000808252602082015261164c84602001518460200151611a6f565b602080830182905285015160009161166391611938565b8551855191925061167391611a6f565b8083526115af9082906115aa816001611a84565b6040517f134eb8900000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015260009060649063134eb890906024016020604051808303816000875af1158015611701573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611725919061209c565b905090565b805160208201516040517fe4f36e1000000000000000000000000000000000000000000000000000000000815260009260649263e4f36e10926112c5927f04000000000000000000000000000000000000000000000000000000000000009290916004016120b5565b60408051606083901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660208201528151601481830301815260348201928390527f3c6f0e6800000000000000000000000000000000000000000000000000000000909252600091606491633c6f0e68916114e5917f04000000000000000000000000000000000000000000000000000000000000009188916038016120b5565b60006064637c12a1eb61147e6004808561195e565b60006064636d82e45e61147e6004808561195e565b6000606463813b207461147e6004808561195e565b600060646320cc408d61188883808061195e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810187905260448101869052606481018590526084016020604051808303816000875af1158015611914573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611423919061209c565b6000606463dd14869361147e6004808561195e565b6000606463145fca2c61147e600480855b60008160028111156119725761197261206d565b60ff1660088460048111156119895761198961206d565b61ffff16901b61ffff1660108660048111156119a7576119a761206d565b62ffffff16901b171760e81b949350505050565b6000606463371d1bf261147e6004808561195e565b6000606463371d1bf26119e6600480600261195e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905267ffffffffffffffff851660448201526064016114e5565b600060646320cc408d6118886004808561195e565b60006064638c5d015061147e6004808561195e565b60006064638c5d01506119e6600480600261195e565b508054600082556001016002900490600052602060002090810190611abf9190611b08565b50565b50805460008255601f016020900490600052602060002090810190611abf9190611b08565b5080546000825560020290600052602060002090810190611abf9190611b21565b5b80821115611b1d5760008155600101611b09565b5090565b5b80821115611b1d5760008082556001820155600201611b22565b600060208284031215611b4e57600080fd5b5035919050565b60008083601f840112611b6757600080fd5b50813567ffffffffffffffff811115611b7f57600080fd5b6020830191508360208260051b8501011115611b9a57600080fd5b9250929050565b60008060208385031215611bb457600080fd5b823567ffffffffffffffff811115611bcb57600080fd5b611bd785828601611b55565b90969095509350505050565b6000806000806000806000806080898b031215611bff57600080fd5b883567ffffffffffffffff80821115611c1757600080fd5b611c238c838d01611b55565b909a50985060208b0135915080821115611c3c57600080fd5b611c488c838d01611b55565b909850965060408b0135915080821115611c6157600080fd5b611c6d8c838d01611b55565b909650945060608b0135915080821115611c8657600080fd5b50611c938b828c01611b55565b999c989b5096995094979396929594505050565b60008060008060008060608789031215611cc057600080fd5b863567ffffffffffffffff80821115611cd857600080fd5b611ce48a838b01611b55565b90985096506020890135915080821115611cfd57600080fd5b611d098a838b01611b55565b90965094506040890135915080821115611d2257600080fd5b50611d2f89828a01611b55565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611d8257600080fd5b813560ff8116811461152857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611df357611df3611d93565b5060010190565b600060208284031215611e0c57600080fd5b81356fffffffffffffffffffffffffffffffff8116811461152857600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112611e6057600080fd5b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611ebc57611ebc611e6a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f0957611f09611e6a565b604052919050565b60008136036060811215611f2457600080fd5b611f2c611e99565b6040821215611f3a57600080fd5b611f42611e99565b84358152602080860135818301529082526040850135925067ffffffffffffffff80841115611f7057600080fd5b92850192601f3681860112611f8457600080fd5b611f8c611e99565b806040870136811115611f9e57600080fd5b875b8181101561204057803586811115611fb85760008081fd5b89013686820112611fc95760008081fd5b803587811115611fdb57611fdb611e6a565b61200a897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08984011601611ec2565b818152368a83850101111561201f5760008081fd5b818a84018b83013760009181018a0191909152855250928601928601611fa0565b505093850193909352509195945050505050565b60ff828116828216039081111561125a5761125a611d93565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082840312156120ae57600080fd5b5051919050565b7fff000000000000000000000000000000000000000000000000000000000000008416815260006020848184015260606040840152835180606085015260005b81811015612111578581018301518582016080015282016120f5565b5060006080828601015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505094935050505056fea164736f6c6343000813000a";

type Miscellaneous128BitTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Miscellaneous128BitTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Miscellaneous128BitTestsContract__factory extends ContractFactory {
  constructor(...args: Miscellaneous128BitTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Miscellaneous128BitTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Miscellaneous128BitTestsContract__factory {
    return super.connect(runner) as Miscellaneous128BitTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Miscellaneous128BitTestsContractInterface {
    return new Interface(_abi) as Miscellaneous128BitTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Miscellaneous128BitTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Miscellaneous128BitTestsContract;
  }
}
