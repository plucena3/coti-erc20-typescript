/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Comparison128BitTestsContract,
  Comparison128BitTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/Comparison128BitTestsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boolResults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "eqTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "geTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "gtTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "leTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "ltTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "maxTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "minTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "a",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "b",
        type: "uint128[]",
      },
    ],
    name: "neTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uintResults",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061264f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806366ede8f511610076578063925d54811161005b578063925d548114610180578063f10f8f0d14610193578063f43c1cc5146101a657600080fd5b806366ede8f51461014a5780636f9494e21461015d57600080fd5b80634c5b057b116100a75780634c5b057b146100eb57806358d0fcc6146100fe5780635e6592a71461011157600080fd5b80631797684f146100c35780632327b030146100d8575b600080fd5b6100d66100d1366004612486565b6101b9565b005b6100d66100e6366004612486565b6103dd565b6100d66100f9366004612486565b6105d6565b6100d661010c366004612486565b6107cf565b61012461011f3660046124f2565b610a2b565b6040516fffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d6610158366004612486565b610a71565b61017061016b3660046124f2565b610cc8565b6040519015158152602001610141565b6100d661018e366004612486565b610cfc565b6100d66101a1366004612486565b610ef5565b6100d66101b4366004612486565b6110ee565b828114610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d61746368000000000000000000000060448201526064015b60405180910390fd5b610230836112e7565b60005b838110156103d657600061026c8686848181106102525761025261250b565b9050602002016020810190610267919061253a565b61135a565b905060006102858585858181106102525761025261250b565b905061029961029483836113b4565b611400565b600084815481106102ac576102ac61250b565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506103086102948888868181106102ed576102ed61250b565b9050602002016020810190610302919061253a565b83611491565b15156000848154811061031d5761031d61250b565b90600052602060002090602091828204019190069054906101000a900460ff1615151461034c5761034c61256c565b61037f610294838787878181106103655761036561250b565b905060200201602081019061037a919061253a565b6114e1565b1515600084815481106103945761039461250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146103c3576103c361256c565b5050806103cf9061259b565b9050610233565b5050505050565b828114610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b61044f836112e7565b60005b838110156103d65760006104718686848181106102525761025261250b565b9050600061048a8585858181106102525761025261250b565b90506104996102948383611526565b600084815481106104ac576104ac61250b565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506105086102948888868181106104ed576104ed61250b565b9050602002016020810190610502919061253a565b83611557565b15156000848154811061051d5761051d61250b565b90600052602060002090602091828204019190069054906101000a900460ff1615151461054c5761054c61256c565b61057f610294838787878181106105655761056561250b565b905060200201602081019061057a919061253a565b611597565b1515600084815481106105945761059461250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146105c3576105c361256c565b5050806105cf9061259b565b9050610452565b82811461063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b610648836112e7565b60005b838110156103d657600061066a8686848181106102525761025261250b565b905060006106838585858181106102525761025261250b565b905061069261029483836115cb565b600084815481106106a5576106a561250b565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506107016102948888868181106106e6576106e661250b565b90506020020160208101906106fb919061253a565b8361160a565b1515600084815481106107165761071661250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146107455761074561256c565b6107786102948387878781811061075e5761075e61250b565b9050602002016020810190610773919061253a565b611650565b15156000848154811061078d5761078d61250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146107bc576107bc61256c565b5050806107c89061259b565b905061064b565b828114610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b61084183611695565b60005b838110156103d65760006108638686848181106102525761025261250b565b9050600061087c8585858181106102525761025261250b565b905061089061088b8383611715565b611786565b600184815481106108a3576108a361250b565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061092161088b8888868181106109065761090661250b565b905060200201602081019061091b919061253a565b836117df565b6fffffffffffffffffffffffffffffffff16600184815481106109465761094661250b565b6000918252602090912060028204015460019091166010026101000a90046fffffffffffffffffffffffffffffffff16146109835761098361256c565b6109b661088b8387878781811061099c5761099c61250b565b90506020020160208101906109b1919061253a565b611860565b6fffffffffffffffffffffffffffffffff16600184815481106109db576109db61250b565b6000918252602090912060028204015460019091166010026101000a90046fffffffffffffffffffffffffffffffff1614610a1857610a1861256c565b505080610a249061259b565b9050610844565b60018181548110610a3b57600080fd5b9060005260206000209060029182820401919006601002915054906101000a90046fffffffffffffffffffffffffffffffff1681565b828114610ada576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b610ae383611695565b60005b838110156103d6576000610b058686848181106102525761025261250b565b90506000610b1e8585858181106102525761025261250b565b9050610b2d61088b83836118d4565b60018481548110610b4057610b4061250b565b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550610bbe61088b888886818110610ba357610ba361250b565b9050602002016020810190610bb8919061253a565b83611924565b6fffffffffffffffffffffffffffffffff1660018481548110610be357610be361250b565b6000918252602090912060028204015460019091166010026101000a90046fffffffffffffffffffffffffffffffff1614610c2057610c2061256c565b610c5361088b83878787818110610c3957610c3961250b565b9050602002016020810190610c4e919061253a565b61197d565b6fffffffffffffffffffffffffffffffff1660018481548110610c7857610c7861250b565b6000918252602090912060028204015460019091166010026101000a90046fffffffffffffffffffffffffffffffff1614610cb557610cb561256c565b505080610cc19061259b565b9050610ae6565b60008181548110610cd857600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b828114610d65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b610d6e836112e7565b60005b838110156103d6576000610d908686848181106102525761025261250b565b90506000610da98585858181106102525761025261250b565b9050610db861029483836119d5565b60008481548110610dcb57610dcb61250b565b90600052602060002090602091828204019190066101000a81548160ff021916908315150217905550610e27610294888886818110610e0c57610e0c61250b565b9050602002016020810190610e21919061253a565b83611a14565b151560008481548110610e3c57610e3c61250b565b90600052602060002090602091828204019190069054906101000a900460ff16151514610e6b57610e6b61256c565b610e9e61029483878787818110610e8457610e8461250b565b9050602002016020810190610e99919061253a565b611a5a565b151560008481548110610eb357610eb361250b565b90600052602060002090602091828204019190069054906101000a900460ff16151514610ee257610ee261256c565b505080610eee9061259b565b9050610d71565b828114610f5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b610f67836112e7565b60005b838110156103d6576000610f898686848181106102525761025261250b565b90506000610fa28585858181106102525761025261250b565b9050610fb16102948383611a9f565b60008481548110610fc457610fc461250b565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506110206102948888868181106110055761100561250b565b905060200201602081019061101a919061253a565b83611ac9565b1515600084815481106110355761103561250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146110645761106461256c565b6110976102948387878781811061107d5761107d61250b565b9050602002016020810190611092919061253a565b611b00565b1515600084815481106110ac576110ac61250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146110db576110db61256c565b5050806110e79061259b565b9050610f6a565b828114611157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d617463680000000000000000000000604482015260640161021e565b611160836112e7565b60005b838110156103d65760006111828686848181106102525761025261250b565b9050600061119b8585858181106102525761025261250b565b90506111aa6102948383611b34565b600084815481106111bd576111bd61250b565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055506112196102948888868181106111fe576111fe61250b565b9050602002016020810190611213919061253a565b83611b73565b15156000848154811061122e5761122e61250b565b90600052602060002090602091828204019190069054906101000a900460ff1615151461125d5761125d61256c565b611290610294838787878181106112765761127661250b565b905060200201602081019061128b919061253a565b611bb9565b1515600084815481106112a5576112a561250b565b90600052602060002090602091828204019190069054906101000a900460ff161515146112d4576112d461256c565b5050806112e09061259b565b9050611163565b6112f26000806123d8565b60005b8181101561135657600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360208204018054601f9092166101000a60ff021990911690558061134e8161259b565b9150506112f5565b5050565b604080518082019091526000808252602082015260408051808201909152600080825260208201528267ffffffffffffffff604082901c1661139b81611bfe565b83526113a682611bfe565b602084015250909392505050565b6000806113c984600001518460000151611cb3565b90506113f8816113e186600001518660000151611d72565b6113f387602001518760200151611d72565b611d87565b949350505050565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015611464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114889190612629565b15159392505050565b805160009067ffffffffffffffff604085901c1690849083906114b5908490611e4c565b90506114d7816114c9858860000151611ed6565b6113f3858960200151611ed6565b9695505050505050565b815160009067ffffffffffffffff604084901c1690839083906115049084611eec565b90506114d781611518886000015186611f76565b6113f3896020015186611f76565b600061155061153d84602001518460200151611cb3565b8451845161154b9190611cb3565b611f8c565b9392505050565b60008080604085901c67ffffffffffffffff16859150915061158e611580828660200151611e4c565b61154b848760000151611e4c565b95945050505050565b602082015160009067ffffffffffffffff604084901c1690839061158e906115bf9083611eec565b865161154b9085611eec565b6000806115e084600001518460000151611cb3565b90506113f8816115f886600001518660000151611fa0565b6113f387602001518760200151611fa0565b805160009067ffffffffffffffff604085901c16908490839061162e908490611e4c565b90506114d781611642858860000151611fb5565b6113f3858960200151611fb5565b815160009067ffffffffffffffff604084901c1690839083906116739084611eec565b90506114d781611687886000015186611fcb565b6113f3896020015186611fcb565b6116a160016000612400565b60005b818110156113565760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660028204018054919092166010026101000a6fffffffffffffffffffffffffffffffff02191690558061170d8161259b565b9150506116a4565b60408051808201909152600080825260208201528251825160009161173991611cb3565b9050600061174f85600001518560000151611d72565b9050600061176586602001518660200151611d72565b90506114d78361177684888a611fe1565b61178184898b611fe1565b611fe1565b600080611796836000015161203a565b905060006117a7846020015161203a565b90508067ffffffffffffffff1660408367ffffffffffffffff166fffffffffffffffffffffffffffffffff16901b1792505050919050565b6040805180820182526000808252602082018190528351919285901c67ffffffffffffffff1691859190611814908490611e4c565b90506000611826848760000151611ed6565b90506000611838848860200151611ed6565b905061185483611849848a8c6120a1565b611781848b8d6120a1565b98975050505050505050565b6040805180820182526000808252602082018190528451919284901c67ffffffffffffffff16918491906118949084611eec565b905060006118a6876000015185611f76565b905060006118b8886020015185611f76565b9050611854836118c9848a8c61210f565b611781848b8d61210f565b6040805180820190915260008082526020820152825182516000916118f891611cb3565b9050600061190e85600001518560000151611fa0565b9050600061176586602001518660200151611fa0565b6040805180820182526000808252602082018190528351919285901c67ffffffffffffffff1691859190611959908490611e4c565b9050600061196b848760000151611fb5565b90506000611838848860200151611fb5565b6040805180820182526000808252602082018190528451919284901c67ffffffffffffffff16918491906119b19084611eec565b905060006119c3876000015185611fcb565b905060006118b8886020015185611fcb565b6000806119ea84600001518460000151611cb3565b90506113f881611a0286600001518660000151611d72565b6113f387602001518760200151612171565b805160009067ffffffffffffffff604085901c169084908390611a38908490611e4c565b90506114d781611a4c858860000151611ed6565b6113f3858960200151612186565b815160009067ffffffffffffffff604084901c169083908390611a7d9084611eec565b90506114d781611a91886000015186611f76565b6113f389602001518661219c565b6000611550611ab6846020015184602001516121b2565b84518451611ac491906121b2565b6121c7565b60008080604085901c67ffffffffffffffff16859150915061158e611af28286602001516121db565b611ac48487600001516121db565b602082015160009067ffffffffffffffff604084901c1690839061158e90611b2890836121f1565b8651611ac490856121f1565b600080611b4984600001518460000151611cb3565b90506113f881611b6186600001518660000151611fa0565b6113f387602001518760200151612207565b805160009067ffffffffffffffff604085901c169084908390611b97908490611e4c565b90506114d781611bab858860000151611fb5565b6113f385896020015161221c565b815160009067ffffffffffffffff604084901c169083908390611bdc9084611eec565b90506114d781611bf0886000015186611fcb565b6113f3896020015186612232565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b60906044015b6020604051808303816000875af1158015611c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cad9190612629565b92915050565b60006064637c12a1eb611cc860048085612244565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260248101869052604481018590526064015b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115509190612629565b60006064636d82e45e611cc860048085612244565b600060646320cc408d611d9b838080612244565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810187905260448101869052606481018590526084015b6020604051808303816000875af1158015611e28573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f89190612629565b60006064637c12a1eb611e626004806001612244565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015267ffffffffffffffff8616602482015260448101859052606401611d2f565b60006064636d82e45e611e626004806001612244565b60006064637c12a1eb611f026004806002612244565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905267ffffffffffffffff85166044820152606401611d2f565b60006064636d82e45e611f026004806002612244565b6000606463fe9c73d1611cc8838080612244565b6000606463dd148693611cc860048085612244565b6000606463dd148693611e626004806001612244565b6000606463dd148693611f026004806002612244565b6040805180820190915260008082526020820152604080518082019091526000808252602082015261201c85856020015185602001516122a1565b6020820152835183516120309187916122a1565b8152949350505050565b6040517f0cfed5610000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015260248101829052600090606490630cfed56190604401611c6a565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604085901c67ffffffffffffffff1685915091506120ef878760200151836122b6565b60208401528551612102908890846122b6565b8352509095945050505050565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604086901c67ffffffffffffffff16869150915061215d87828760200151612347565b602084015284516121029088908490612347565b6000606463813b2074611cc860048085612244565b6000606463813b2074611e626004806001612244565b6000606463813b2074611f026004806002612244565b600060646342094c56611cc860048085612244565b6000606463fb7da35f611cc8838080612244565b600060646342094c56611e626004806001612244565b600060646342094c56611f026004806002612244565b6000606463145fca2c611cc860048085612244565b6000606463145fca2c611e626004806001612244565b6000606463145fca2c611f0260048060025b6000816002811115612258576122586125fa565b60ff16600884600481111561226f5761226f6125fa565b61ffff16901b61ffff16601086600481111561228d5761228d6125fa565b62ffffff16901b171760e81b949350505050565b600060646320cc408d611d9b60048085612244565b600060646320cc408d6122cc6004806002612244565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff00000000000000000000000000000000000000000000000000000000009091166004820152602481018790526044810186905267ffffffffffffffff85166064820152608401611e09565b600060646320cc408d61235d6004806001612244565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810187905267ffffffffffffffff8616604482015260648101859052608401611e09565b50805460008255601f0160209004906000526020600020908101906123fd9190612421565b50565b5080546000825560010160029004906000526020600020908101906123fd91905b5b808211156124365760008155600101612422565b5090565b60008083601f84011261244c57600080fd5b50813567ffffffffffffffff81111561246457600080fd5b6020830191508360208260051b850101111561247f57600080fd5b9250929050565b6000806000806040858703121561249c57600080fd5b843567ffffffffffffffff808211156124b457600080fd5b6124c08883890161243a565b909650945060208701359150808211156124d957600080fd5b506124e68782880161243a565b95989497509550505050565b60006020828403121561250457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561254c57600080fd5b81356fffffffffffffffffffffffffffffffff8116811461155057600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561263b57600080fd5b505191905056fea164736f6c6343000813000a";

type Comparison128BitTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Comparison128BitTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Comparison128BitTestsContract__factory extends ContractFactory {
  constructor(...args: Comparison128BitTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Comparison128BitTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Comparison128BitTestsContract__factory {
    return super.connect(runner) as Comparison128BitTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Comparison128BitTestsContractInterface {
    return new Interface(_abi) as Comparison128BitTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Comparison128BitTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Comparison128BitTestsContract;
  }
}
