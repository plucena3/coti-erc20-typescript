/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Bitwise256BitTestsContract,
  Bitwise256BitTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/Bitwise256BitTestsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "a",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "b",
        type: "uint256[]",
      },
    ],
    name: "andTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numbers2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "a",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "b",
        type: "uint256[]",
      },
    ],
    name: "orTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "a",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "b",
        type: "uint8[]",
      },
    ],
    name: "shlTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "a",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "b",
        type: "uint8[]",
      },
    ],
    name: "shrTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "a",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "b",
        type: "uint256[]",
      },
    ],
    name: "xorTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611956806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063859cc7d611610050578063859cc7d6146100b2578063c5799c26146100d7578063dacd34fa146100ea57600080fd5b8063295ef28a146100775780632c05c7221461008c5780635e8626191461009f575b600080fd5b61008a61008536600461177b565b6100fd565b005b61008a61009a36600461177b565b610213565b61008a6100ad36600461177b565b6103a1565b6100c56100c03660046117e7565b61049a565b60405190815260200160405180910390f35b61008a6100e536600461177b565b6104bb565b61008a6100f836600461177b565b610649565b82811461016b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d61746368000000000000000000000060448201526064015b60405180910390fd5b610174836107d7565b60005b8381101561020c5760006101a286868481811061019657610196611800565b90506020020135610833565b90506101dc6101d7828686868181106101bd576101bd611800565b90506020020160208101906101d2919061182f565b61086b565b61097e565b600083815481106101ef576101ef611800565b6000918252602090912001555061020581611881565b9050610177565b5050505050565b82811461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d6174636800000000000000000000006044820152606401610162565b610285836107d7565b60005b8381101561020c5760006102a786868481811061019657610196611800565b905060006102c085858581811061019657610196611800565b90506102cf6101d783836109d5565b600084815481106102e2576102e2611800565b6000918252602090912001556103136101d788888681811061030657610306611800565b9050602002013583610a13565b6000848154811061032657610326611800565b90600052602060002001541461033e5761033e6118b9565b6103636101d78387878781811061035757610357611800565b90506020020135610a59565b6000848154811061037657610376611800565b90600052602060002001541461038e5761038e6118b9565b50508061039a90611881565b9050610288565b82811461040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d6174636800000000000000000000006044820152606401610162565b610413836107d7565b60005b8381101561020c57600061043586868481811061019657610196611800565b905061046a6101d78286868681811061045057610450611800565b9050602002016020810190610465919061182f565b610a91565b6000838154811061047d5761047d611800565b6000918252602090912001555061049381611881565b9050610416565b600081815481106104aa57600080fd5b600091825260209091200154905081565b828114610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d6174636800000000000000000000006044820152606401610162565b61052d836107d7565b60005b8381101561020c57600061054f86868481811061019657610196611800565b9050600061056885858581811061019657610196611800565b90506105776101d78383610b6b565b6000848154811061058a5761058a611800565b6000918252602090912001556105bb6101d78888868181106105ae576105ae611800565b9050602002013583610ba0565b600084815481106105ce576105ce611800565b9060005260206000200154146105e6576105e66118b9565b61060b6101d7838787878181106105ff576105ff611800565b90506020020135610bda565b6000848154811061061e5761061e611800565b906000526020600020015414610636576106366118b9565b50508061064290611881565b9050610530565b8281146106b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e707574206c656e677468206d69736d6174636800000000000000000000006044820152606401610162565b6106bb836107d7565b60005b8381101561020c5760006106dd86868481811061019657610196611800565b905060006106f685858581811061019657610196611800565b90506107056101d78383610c12565b6000848154811061071857610718611800565b6000918252602090912001556107496101d788888681811061073c5761073c611800565b9050602002013583610c47565b6000848154811061075c5761075c611800565b906000526020600020015414610774576107746118b9565b6107996101d78387878781811061078d5761078d611800565b90506020020135610c81565b600084815481106107ac576107ac611800565b9060005260206000200154146107c4576107c46118b9565b5050806107d090611881565b90506106be565b6107e26000806116b1565b60005b8181101561082f57600080546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301558061082781611881565b9150506107e5565b5050565b61083b6116d2565b6108436116d2565b82608081901c61085281610cb9565b835261085d82610cb9565b602084015250909392505050565b6108736116d2565b61087b6116d2565b60808360ff16106108c45783516108929084610d05565b5061089d6000610cb9565b6020808301919091528401516108bd906108b86080866118e8565b610d05565b8152610975565b60ff8316156109665760208401516fffffffffffffffffffffffffffffffff60ff85161c906108fd906108f79083610df9565b85610d05565b602083015261090d8460806118e8565b60ff166fffffffffffffffffffffffffffffffff8016901b905061095e610938866000015186610d05565b610959610949886020015185610df9565b6109548860806118e8565b610e57565b610f39565b825250610975565b60208085015190820152835181525b90505b92915050565b60008061098e8360000151610f86565b9050600061099f8460200151610f86565b9050806fffffffffffffffffffffffffffffffff166080836fffffffffffffffffffffffffffffffff16901b1792505050919050565b6109dd6116d2565b6109e56116d2565b6109f784602001518460200151610fdf565b602082015283518351610a0a9190610fdf565b81529392505050565b610a1b6116d2565b610a236116d2565b6020830151608085901c908590610a3b90829061102c565b60208401528451610a4d90839061102c565b83525090949350505050565b610a616116d2565b610a696116d2565b6020840151608084901c908490610a80908261108b565b60208401528551610a4d908361108b565b610a996116d2565b610aa16116d2565b60808360ff1610610adb57610aba846020015184610e57565b508351610acc906109546080866118e8565b60208201526108bd6000610cb9565b60ff831615610966576000610af18460806118e8565b60ff166fffffffffffffffffffffffffffffffff8016901c9050610b38610b1c866020015186610e57565b610959610b2d886000015185610df9565b6108b88860806118e8565b60208301525083516fffffffffffffffffffffffffffffffff60ff85161b9061095e90610b659083610df9565b85610e57565b610b736116d2565b610b7b6116d2565b610b8d846020015184602001516110e9565b602082015283518351610a0a91906110e9565b610ba86116d2565b610bb06116d2565b6020830151608085901c908590610bc8908290611136565b60208401528451610a4d908390611136565b610be26116d2565b610bea6116d2565b6020840151608084901c908490610c019082610df9565b60208401528551610a4d9083610df9565b610c1a6116d2565b610c226116d2565b610c3484602001518460200151610f39565b602082015283518351610a0a9190610f39565b610c4f6116d2565b610c576116d2565b6020830151608085901c908590610c6f908290611195565b60208401528451610a4d908390611195565b610c896116d2565b610c916116d2565b6020840151608084901c908490610ca890826111f4565b60208401528551610a4d90836111f4565b604080518082019091526000808252602082015260408051808201909152600080825260208201528267ffffffffffffffff604082901c16610cfa81611252565b835261085d82611252565b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408360ff1610610d6f578351610d449084611301565b50610d4f6000611252565b6020808301919091528401516108bd90610d6a6040866118e8565b611301565b60ff83161561096657602084015167ffffffffffffffff60ff85161c90610da090610d9a90836113c4565b85611301565b6020830152610db08460406118e8565b60ff1667ffffffffffffffff8016901b905061095e610dd3866000015186611301565b610df4610de48860200151856113c4565b610def8860406118e8565b61144e565b611465565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604085901c67ffffffffffffffff168591509150610e468660200151826113c4565b60208401528551610a4d90836113c4565b6040805180820190915260008082526020820152604080518082019091526000808252602082015260408360ff1610610eb957610e9884602001518461144e565b508351610eaa90610def6040866118e8565b60208201526108bd6000611252565b60ff831615610966576000610ecf8460406118e8565b60ff1667ffffffffffffffff8016901c9050610f0e610ef286602001518661144e565b610df4610f038860000151856113c4565b610d6a8860406118e8565b602083015250835167ffffffffffffffff60ff85161b9061095e90610f3390836113c4565b8561144e565b60408051808201909152600080825260208201526040805180820190915260008082526020820152610f7384602001518460200151611465565b602082015283518351610a0a9190611465565b600080610f9683600001516114e5565b90506000610fa784602001516114e5565b90508067ffffffffffffffff1660408367ffffffffffffffff166fffffffffffffffffffffffffffffffff16901b1792505050919050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526110198460200151846020015161154c565b602082015283518351610a0a919061154c565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604086901c67ffffffffffffffff168691509150611079818660200151611561565b60208401528451610a4d908390611561565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604085901c67ffffffffffffffff1685915091506110d88660200151826115eb565b60208401528551610a4d90836115eb565b6040805180820190915260008082526020820152604080518082019091526000808252602082015261112384602001518460200151611601565b602082015283518351610a0a9190611601565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604086901c67ffffffffffffffff168691509150611183818660200151611616565b60208401528451610a4d908390611616565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604086901c67ffffffffffffffff1686915091506111e281866020015161162c565b60208401528451610a4d90839061162c565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600080604085901c67ffffffffffffffff168591509150611241866020015182611642565b60208401528551610a4d9083611642565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b60906044015b6020604051808303816000875af11580156112dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109789190611930565b60006064631135f71a611318600460016002611654565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905260ff851660448201526064015b6020604051808303816000875af11580156113a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190611930565b6000606463fe9c73d16113da6004806002611654565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905267ffffffffffffffff85166044820152606401611381565b600060646339bd1d8d611318600460016002611654565b6000606463fb7da35f61147a60048085611654565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905260448101859052606401611381565b6040517f0cfed5610000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015260248101829052600090606490630cfed561906044016112be565b60006064636f962e2c61147a60048085611654565b60006064636f962e2c6115776004806001611654565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015267ffffffffffffffff8616602482015260448101859052606401611381565b60006064636f962e2c6113da6004806002611654565b6000606463fe9c73d161147a60048085611654565b6000606463fe9c73d16115776004806001611654565b6000606463fb7da35f6115776004806001611654565b6000606463fb7da35f6113da60048060025b600081600281111561166857611668611901565b60ff16600884600481111561167f5761167f611901565b61ffff16901b61ffff16601086600481111561169d5761169d611901565b62ffffff16901b171760e81b949350505050565b50805460008255906000526020600020908101906116cf9190611716565b50565b60408051608081018252600091810182815260608201929092529081908152602001611711604051806040016040528060008152602001600081525090565b905290565b5b8082111561172b5760008155600101611717565b5090565b60008083601f84011261174157600080fd5b50813567ffffffffffffffff81111561175957600080fd5b6020830191508360208260051b850101111561177457600080fd5b9250929050565b6000806000806040858703121561179157600080fd5b843567ffffffffffffffff808211156117a957600080fd5b6117b58883890161172f565b909650945060208701359150808211156117ce57600080fd5b506117db8782880161172f565b95989497509550505050565b6000602082840312156117f957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561184157600080fd5b813560ff8116811461097557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118b2576118b2611852565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60ff828116828216039081111561097857610978611852565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561194257600080fd5b505191905056fea164736f6c6343000813000a";

type Bitwise256BitTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Bitwise256BitTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bitwise256BitTestsContract__factory extends ContractFactory {
  constructor(...args: Bitwise256BitTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Bitwise256BitTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Bitwise256BitTestsContract__factory {
    return super.connect(runner) as Bitwise256BitTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Bitwise256BitTestsContractInterface {
    return new Interface(_abi) as Bitwise256BitTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Bitwise256BitTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Bitwise256BitTestsContract;
  }
}
